{"ast":null,"code":"import { Client, Account, ID } from \"appwrite\";\nconst client = new Client().setEndpoint(\"https://cloud.appwrite.io/v1\") // Update if using a self-hosted Appwrite\n.setProject(\"your-appwrite-project-id\"); // Replace with your actual Appwrite Project ID\n\nconst account = new Account(client);\nexport const login = async (email, password) => {\n  try {\n    await account.createEmailSession(email, password);\n    return await account.get();\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\nexport const register = async (name, email, password) => {\n  try {\n    await account.create(ID.unique(), email, password, name);\n    return await login(email, password);\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\nexport const loginWithGoogle = async () => {\n  try {\n    await account.createOAuth2Session(\"google\");\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\nexport const logout = async () => {\n  try {\n    await account.deleteSession(\"current\");\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};","map":{"version":3,"names":["Client","Account","ID","client","setEndpoint","setProject","account","login","email","password","createEmailSession","get","error","Error","message","register","name","create","unique","loginWithGoogle","createOAuth2Session","logout","deleteSession"],"sources":["C:/Users/berka/Desktop/here_we_start/car-rental-app/frontend/src/services/authService.js"],"sourcesContent":["import { Client, Account, ID } from \"appwrite\";\r\n\r\nconst client = new Client()\r\n  .setEndpoint(\"https://cloud.appwrite.io/v1\") // Update if using a self-hosted Appwrite\r\n  .setProject(\"your-appwrite-project-id\"); // Replace with your actual Appwrite Project ID\r\n\r\nconst account = new Account(client);\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    await account.createEmailSession(email, password);\r\n    return await account.get();\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\nexport const register = async (name, email, password) => {\r\n  try {\r\n    await account.create(ID.unique(), email, password, name);\r\n    return await login(email, password);\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\nexport const loginWithGoogle = async () => {\r\n  try {\r\n    await account.createOAuth2Session(\"google\");\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    await account.deleteSession(\"current\");\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,OAAO,EAAEC,EAAE,QAAQ,UAAU;AAE9C,MAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC,CAAC,CACxBI,WAAW,CAAC,8BAA8B,CAAC,CAAC;AAAA,CAC5CC,UAAU,CAAC,0BAA0B,CAAC,CAAC,CAAC;;AAE3C,MAAMC,OAAO,GAAG,IAAIL,OAAO,CAACE,MAAM,CAAC;AAEnC,OAAO,MAAMI,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMH,OAAO,CAACI,kBAAkB,CAACF,KAAK,EAAEC,QAAQ,CAAC;IACjD,OAAO,MAAMH,OAAO,CAACK,GAAG,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAChC;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAER,KAAK,EAAEC,QAAQ,KAAK;EACvD,IAAI;IACF,MAAMH,OAAO,CAACW,MAAM,CAACf,EAAE,CAACgB,MAAM,CAAC,CAAC,EAAEV,KAAK,EAAEC,QAAQ,EAAEO,IAAI,CAAC;IACxD,OAAO,MAAMT,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;EACrC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAChC;AACF,CAAC;AAED,OAAO,MAAMK,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMb,OAAO,CAACc,mBAAmB,CAAC,QAAQ,CAAC;EAC7C,CAAC,CAAC,OAAOR,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAChC;AACF,CAAC;AAED,OAAO,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMf,OAAO,CAACgB,aAAa,CAAC,SAAS,CAAC;EACxC,CAAC,CAAC,OAAOV,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAChC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}