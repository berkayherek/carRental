{"ast":null,"code":"import{Client,Account,ID}from\"appwrite\";const client=new Client().setEndpoint(\"https://cloud.appwrite.io/v1\")// Update if using a self-hosted Appwrite\n.setProject(\"your-appwrite-project-id\");// Replace with your actual Appwrite Project ID\nconst account=new Account(client);export const login=async(email,password)=>{try{await account.createEmailSession(email,password);return await account.get();}catch(error){throw new Error(error.message);}};export const register=async(name,email,password)=>{try{await account.create(ID.unique(),email,password,name);return await login(email,password);}catch(error){throw new Error(error.message);}};export const loginWithGoogle=async()=>{try{await account.createOAuth2Session(\"google\");}catch(error){throw new Error(error.message);}};export const logout=async()=>{try{await account.deleteSession(\"current\");}catch(error){throw new Error(error.message);}};","map":{"version":3,"names":["Client","Account","ID","client","setEndpoint","setProject","account","login","email","password","createEmailSession","get","error","Error","message","register","name","create","unique","loginWithGoogle","createOAuth2Session","logout","deleteSession"],"sources":["C:/Users/berka/Desktop/here_we_start/car-rental-app/frontend/src/services/authService.js"],"sourcesContent":["import { Client, Account, ID } from \"appwrite\";\r\n\r\nconst client = new Client()\r\n  .setEndpoint(\"https://cloud.appwrite.io/v1\") // Update if using a self-hosted Appwrite\r\n  .setProject(\"your-appwrite-project-id\"); // Replace with your actual Appwrite Project ID\r\n\r\nconst account = new Account(client);\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    await account.createEmailSession(email, password);\r\n    return await account.get();\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\nexport const register = async (name, email, password) => {\r\n  try {\r\n    await account.create(ID.unique(), email, password, name);\r\n    return await login(email, password);\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\nexport const loginWithGoogle = async () => {\r\n  try {\r\n    await account.createOAuth2Session(\"google\");\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    await account.deleteSession(\"current\");\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAASA,MAAM,CAAEC,OAAO,CAAEC,EAAE,KAAQ,UAAU,CAE9C,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAH,MAAM,CAAC,CAAC,CACxBI,WAAW,CAAC,8BAA8B,CAAE;AAAA,CAC5CC,UAAU,CAAC,0BAA0B,CAAC,CAAE;AAE3C,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAL,OAAO,CAACE,MAAM,CAAC,CAEnC,MAAO,MAAM,CAAAI,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAC9C,GAAI,CACF,KAAM,CAAAH,OAAO,CAACI,kBAAkB,CAACF,KAAK,CAAEC,QAAQ,CAAC,CACjD,MAAO,MAAM,CAAAH,OAAO,CAACK,GAAG,CAAC,CAAC,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CAChC,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOC,IAAI,CAAER,KAAK,CAAEC,QAAQ,GAAK,CACvD,GAAI,CACF,KAAM,CAAAH,OAAO,CAACW,MAAM,CAACf,EAAE,CAACgB,MAAM,CAAC,CAAC,CAAEV,KAAK,CAAEC,QAAQ,CAAEO,IAAI,CAAC,CACxD,MAAO,MAAM,CAAAT,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CACrC,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CAChC,CACF,CAAC,CAED,MAAO,MAAM,CAAAK,eAAe,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAb,OAAO,CAACc,mBAAmB,CAAC,QAAQ,CAAC,CAC7C,CAAE,MAAOR,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CAChC,CACF,CAAC,CAED,MAAO,MAAM,CAAAO,MAAM,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAf,OAAO,CAACgB,aAAa,CAAC,SAAS,CAAC,CACxC,CAAE,MAAOV,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CAChC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}